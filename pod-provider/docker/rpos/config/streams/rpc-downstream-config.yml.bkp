# Configuration file for Redpanda Connect
# Intended to handle querying of public posts
# Not currently functional

http:
  enabled: true
  address: "${REDPANDA_HTTP_BASE_URL:0.0.0.0:4195}"
  #root_path: /public
  debug_endpoints: true
  cert_file: "${REDPANDA_HTTPS_CERT_FILE:\"\"}"
  key_file: "${REDPANDA_HTTPS_KEY_FILE:\"\"}"
  oauth2:
    enabled: false

input:
  http_server:
    #address: ""
    timeout: 10s
    rate_limit: ""
    path: "${REDPANDA_QUERY_OPENSEARCH_API_PATH:/downstream}"
    allowed_verbs: [ POST ]
      #path: "${REDPANDA_REQUEST_HASHTAG_HTTP_API_BASE_URL:/tags}/{hashtag}",
      #prefix: ${REDPANDA_DYNAMIC_HTTP_API_PREFIX:/api}

buffer:
  sqlite:
    path: ./buffer.db

pipeline:
  threads: 2
  processors:
    - subprocess:
        name: curl
        args: [ -X, 
          GET, 
          "${OPENSEARCH_HTTP_API_BASE_URL:http://localhost:9200}/${OPENSEARCH_PUBLIC_INDEX_NAME:public-index}/_search",
          -H,
          'Content-Type: application/json',
          -d,
          "${!meta('data')}"
        ]
        max_buffer: 65536
    - http:
        url: "${OPENSEARCH_HTTP_API_BASE_URL:http://localhost:9200}/${OPENSEARCH_PUBLIC_INDEX_NAME:public-index}/_search"
        verb: GET
        headers:
          Content-Type: application/json
    #- opensearch_query:
    #    urls: [ "${OPENSEARCH_HTTP_API_BASE_URL:http://localhost:9200}" ]
    #    index: "${OPENSEARCH_PUBLIC_INDEX_NAME:public-index}"
    #    query: "${! json_from(this.query) }"
    - mapping: |
        root = this.hits.hits.map_each(hit -> hit._source)    # example (change this)

output:
  sync_response:
    headers:
      Content-Type: application/json

redpanda:
  seed_brokers: [ "redpanda-0:9092" ]
  #tls:
  #  enabled: true
  #sasl:
  #  - mechanism: SCRAM-SHA-256
  #    password: "${REDPANDA_ADMIN_PASS:secretpassword}"
  #    username: "${REDPANDA_ADMIN_USER:superuser}"

